name: CI Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint-and-test:
    name: Lint e Testes Python
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # Stop build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
      
    - name: Test imports
      run: |
        python -c "import pipeline; import scripts"
      continue-on-error: true

  dbt-check:
    name: DBT Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install DBT
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core==1.4.9 dbt-bigquery==1.4.3
        
    - name: DBT Debug
      working-directory: ./dbt_brt
      run: |
        dbt debug --profiles-dir . || echo "DBT debug failed (expected without credentials)"
      continue-on-error: true
      
    - name: DBT Parse (Validate SQL)
      working-directory: ./dbt_brt
      run: |
        dbt parse --profiles-dir . || echo "DBT parse completed with warnings"
      continue-on-error: true

  validate-structure:
    name: Validar Estrutura do Projeto
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate required files
      run: |
        echo "Checking required files..."
        test -f README.md || (echo "README.md missing" && exit 1)
        test -f LICENSE || (echo "LICENSE missing" && exit 1)
        test -f requirements.txt || (echo "requirements.txt missing" && exit 1)
        test -f .gitignore || (echo ".gitignore missing" && exit 1)
        test -f data/example_brt_consolidated.csv || (echo "example CSV missing" && exit 1)
        test -d dbt_brt/models || (echo "DBT models missing" && exit 1)
        test -d pipeline || (echo "pipeline folder missing" && exit 1)
        test -d scripts || (echo "scripts folder missing" && exit 1)
        echo "All required files present!"
        
    - name: Check documentation
      run: |
        echo "Checking documentation..."
        test -f docs/ARQUITETURA.md || echo "ARQUITETURA.md missing"
        test -f docs/GCP_SETUP.md || echo "GCP_SETUP.md missing"
        test -f docs/QUICKSTART.md || echo "QUICKSTART.md missing"
        test -d docs/capturas || echo "capturas folder missing"
        echo "Documentation check complete!"
